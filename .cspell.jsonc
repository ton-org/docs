// The .jsonc extension allows free use of comments and trailing commas.
// The file is named with a dot in front to discourage frequent editing â€”
// target dictionaries are located in the resources/dictionaries/ directory.
{
  "$schema": "https://raw.githubusercontent.com/streetsidesoftware/cspell/main/cspell.schema.json",
  "version": "0.2",
  "language": "en-US",
  "dictionaryDefinitions": [
    {
      "name": "main-list",
      "path": "resources/dictionaries/custom.txt",
      "addWords": true,
    },
    {
      "name": "tvm-instructions",
      "path": "resources/dictionaries/tvm-instructions.txt"
    }
  ],
  "dictionaries": [
    "main-list",
    "tvm-instructions"
  ],
  "useGitignore": true,
  "files": [
    "**/*.{md,mdx}",
    "**/*.{js,jsx}",
  ],
  "ignorePaths": [
    // Some whitepapers
    "foundations/whitepapers/tblkch.mdx",
    "foundations/whitepapers/ton.mdx",
    // Generated files
    "tvm/instructions.mdx",
    // Binaries
    "**/*.boc",
    // Code
    "**/*.fc",
    "**/*.fif",
    "**/*.fift",
    "**/*.func",
    "**/*.tact",
    "**/*.tasm",
    "**/*.tlb",
    "**/*.tolk",
    "**/*.py*",
    "**/*.{ts,tsx}",
    // Miscellaneous
    "**/*.git*",
    "**/*.svg",
    "**/*.txt",
    "CODEOWNERS",
    "**/*http-api*",
  ],
  "ignoreRegExpList": [
    //
    // Predefined patterns from:
    // https://github.com/streetsidesoftware/cspell/blob/main/packages/cspell-lib/src/lib/Settings/DefaultSettings.ts
    //
    "SpellCheckerDisable",
    "SpellCheckerIgnoreInDocSetting",
    "Urls",
    "Email",
    "RsaCert",
    "SshRsa",
    "Base64MultiLine",
    "Base64SingleLine",
    "CommitHash",
    "CommitHashLink",
    "CStyleHexValue",
    "CSSHexValue",
    "SHA",
    "HashStrings",
    "UnicodeRef",
    "UUID",
    "href",
    //
    // Custom patterns
    //
    "=\\s*\".*?\"", // ="..."
    "(?<!\\\\)\\$(?:\\\\.|[^$\\\\])*?\\$", // inline math
    "/(?<!\\\\)\\$\\$\\r?\\n.*?(?<=\\n)\\$\\$/gms", // block math
    "(?<!\\\\)`.*?`", // inline code
    "/^([ \\t]*```).*([\\s\\S]*?)^\\1$/gmx", // block code
    "^import[ \\t].+$", // import ...
    "/^export[ \\t].+?(?=\\r?\\n\\r?\\n)/gms", // export ...
    "(?<!\\\\)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\}", // jsx expressions in {}
    "/\\bton-?[a-z]+/gi", // ton-prefixed product names
  ],
}
